openapi: 3.0.0
info:
  title: API Catalog Service
  version: "0.0.1-oas3"
servers:
  - url: 'https://127.0.0.1:8080/rest'
    description: By Elmehdi KHALKI
paths:
  /catalogs/getAllCat:
    get:
      operationId: 'controllers\CatalogController::getAllCat'
      responses:
        '200':
          description: all catalogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: End-point doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Url doesn't exists
                type: object
  /catalogs/getById/:
    get:
      operationId: 'controllers\CatalogController::getById'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 2
      responses:
        '200':
          description: get Catalog by id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: End-point doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Url doesn't exists
                type: object
  /catalogs/get/:
    get:
      operationId: 'controllers\CatalogController::get'
      responses:
        '200':
          description: get Catalogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: End-point doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Url doesn't exists
                type: object
  /catalogs/getOne/:
    get:
      operationId: 'controllers\CatalogController::getOne'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: get one Catalogs by id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: End-point doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Url doesn't exists
                type: object
  /catalogs/addCatalog:
    post:
      operationId: 'controllers\CatalogController::addCatalog'
      parameters:
        - name: catalog
          in: query
          required: true
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Catalog'
      responses:
        '200':
          description: 200Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: Ressource doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Route invalid
                type: object
  /catalogs/add:
    post:
      operationId: 'controllers\CatalogController::save'
      parameters:
        - name: catalog
          in: query
          required: true
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Catalog'
      responses:
        '200':
          description: 200Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: Ressource doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Route invalid
                type: object
  /catalogs/ajouterProdToCatalog:
    post:
      operationId: 'controllers\CatalogController::ajouterProdToCatalog'
      parameters:
        - name: idcatalog
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: idproduct
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 200OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogProduct'
        '404':
          description: Ressource doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Route invalid
                type: object
  /catalogs/deleteCatalog/:
    delete:
      operationId: 'controllers\CatalogController::deleteCatalog'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 2
      responses:
        '200':
          description: 200OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: Ressource doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Route invalid
                type: object
  /catalogs/delete/:
    delete:
      operationId: 'controllers\CatalogController::delete'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 200OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: Ressource doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Route invalid
                type: object
  /catalogs/update/:
    put:
      operationId: 'controllers\RestCartController::update'
      parameters:
        - name: catalog
          in: query
          required: true
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Catalog'
      responses:
        '200':
          description: 200OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        '404':
          description: Ressource doesn't exists
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Route invalid
                type: object
components:
  schemas:
    Catalog:
      properties:
        id:
          type: integer
        lobelle:
          type: string
        details:
          type: string
        image:
          type: string
        datec:
          type: string
          format: date-time
          nullable: false
      type: object
    CatalogProduct:
      properties:
        id:
          type: integer
        idcatalog:
          type: integer
        idproduct:
          type: integer
        datecp:
          type: string
          format: date-time
      type: object
